{"version":3,"sources":["components/icon/icon.js","components/pad/pad.js","utils/time-utils.js","utils/storage-utils.js","containers/device/device-modes.js","utils/clipboard-utils.js","components/display/two-digits.js","components/display/symbol.js","components/display/time.js","components/display/display.js","containers/device/device.js","components/sign/sign.js","containers/app/app.js","serviceWorker.js","index.js"],"names":["Icon","_ref","type","react_default","a","createElement","className","index_es","icon","PadTemplate","onClick","children","concat","PadWithKey","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleKeyDown","e","keyCode","pressed","state","setState","handleKeyUp","_this$props","document","addEventListener","removeEventListener","_this$props2","pad_PadTemplate","Component","Pad","_ref2","rest","objectWithoutProperties","pad_PadWithKey","assign","MINUTE","HOUR","WEEK","fromMs","milliseconds","fullSeconds","Math","floor","seconds","fullMinutes","minutes","hours","timeToString","negative","minusStr","minutesStr","getMode","localStorage","getItem","setMode","value","setItem","getCurrent","setCurrent","getTotal","setTotal","increaseTotal","total","ms","addMinutesToMs","getStartTime","setStartTime","MODES","stop","play","pause","copyTextToClipboard","text","onSuccess","onError","navigator","clipboard","writeText","then","textArea","body","appendChild","focus","select","execCommand","err","removeChild","fallbackCopyTextToClipboard","Digit","TwoDigits","val","str","toString","react","two_digits_Digit","Symbol","show","Delimiter","symbol_Symbol","Minus","_ref3","cursorPointer","cursor","Time","isNegative","module","getModule","_fromMs","delimiter","showSeconds","onlyPositive","_fromMs2","style","symbol_Minus","two_digits","symbol_Delimiter","Display","current","showDelimiter","mode","icon_icon","time","Device","tick","diffTime","startTime","storage","nowTime","Date","now","prevState","onStartPause","intervalId","clearInterval","setInterval","onReset","_this$state","SECOND","lastSubtraction","lastMonday","date","dayOfWeek","getDay","dateToDayOfWeek","dayOfMonth","getDate","setDate","setHours","getTime","getLastMonday","weeks","difference","getFullWeeksSince","_this$state2","display_display","pad_pad","Sign","href","target","rel","App","defineProperty","window","device_device","sign_sign","Boolean","location","hostname","match","library","add","faPlay","faPause","faStop","ReactDOM","render","app_app","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5d80cd4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './icon.css';\r\n\r\nconst Icon = ({ type }) => (\r\n    <div className='icon'>\r\n        <FontAwesomeIcon icon={type} />\r\n    </div>\r\n);\r\n\r\nexport default Icon;\r\n","import React, { Component } from 'react';\r\nimport './pad.css';\r\n\r\nconst PadTemplate = ({ onClick, children, className }) => {\r\n    return (\r\n        <div className={`pad ${className || ''}`} onClick={onClick}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nclass PadWithKey extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pressed: false\r\n        };\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        const { keyCode } = this.props;\r\n        const { pressed } = this.state;\r\n\r\n        if (e.keyCode !== keyCode || pressed) return;\r\n        this.setState({ pressed: true });\r\n    };\r\n\r\n    handleKeyUp = e => {\r\n        const { keyCode, onClick } = this.props;\r\n        if (e.keyCode !== keyCode) return;\r\n        this.setState({ pressed: false });\r\n        onClick && onClick();\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n        document.addEventListener('keyup', this.handleKeyUp);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n        document.removeEventListener('keyup', this.handleKeyUp);\r\n    }\r\n\r\n    render() {\r\n        const { onClick, children, className } = this.props;\r\n        const { pressed } = this.state;\r\n        return (\r\n            <PadTemplate onClick={onClick} children={children} className={`${className} ${pressed ? 'pressed' : 0}`} />\r\n        );\r\n    }\r\n}\r\n\r\nconst Pad = ({ keyCode, ...rest }) =>\r\n    keyCode ? <PadWithKey keyCode={keyCode} {...rest} /> : <PadTemplate {...rest} />;\r\n\r\nexport default Pad;\r\n","export const SECOND = 1000;\r\nexport const MINUTE = 60 * SECOND;\r\nexport const HOUR = 60 * MINUTE;\r\nconst DAY = 24 * HOUR;\r\nconst WEEK = 7 * DAY;\r\n\r\nexport const format = val => {\r\n    if (val < 10) return '0' + val;\r\n    return val.toString();\r\n};\r\n\r\nexport const fromMs = milliseconds => {\r\n    const fullSeconds = Math.floor(milliseconds / SECOND);\r\n    const seconds = fullSeconds % (MINUTE / SECOND);\r\n    const fullMinutes = Math.floor(fullSeconds / (MINUTE / SECOND));\r\n    const minutes = fullMinutes % (HOUR / MINUTE);\r\n    const hours = Math.floor(fullMinutes / (HOUR / MINUTE));\r\n\r\n    return { hours, minutes, seconds };\r\n};\r\n\r\n/***\r\n * @param {Date} date\r\n * @returns {number[0-6]}\r\n * 0 - Monday\r\n * ...\r\n * 6 - Sunday\r\n */\r\nconst dateToDayOfWeek = date => (date.getDay() || 7) - 1;\r\n\r\nexport const getLastMonday = () => {\r\n    const date = new Date();\r\n    const dayOfWeek = dateToDayOfWeek(date);\r\n    const dayOfMonth = date.getDate();\r\n    date.setDate(dayOfMonth - dayOfWeek);\r\n    date.setHours(0, 0, 0, 0);\r\n    return date.getTime();\r\n}\r\n\r\nexport const getFullWeeksSince = date => {\r\n    const now = Date.now();\r\n    const difference = now - date;\r\n    return Math.floor(difference / WEEK);\r\n}\r\n\r\n/**\r\n * @param {number | string} ms\r\n * @param {number | string} minutes\r\n * @return {number} (ms + minutes) im ms\r\n */\r\nexport const addMinutesToMs = (ms, minutes) => + ms + minutes * MINUTE;\r\n\r\nexport const timeToString = (negative, hours, minutes) => {\r\n    const minusStr = negative ? '-' : '';\r\n    const minutesStr = minutes ? `${minutes}m` : '';\r\n    const hoursStr = hours ? `${hours}h` : '';\r\n\r\n    const hoursMinutesStr = hoursStr + minutesStr;\r\n\r\n    return minusStr + hoursMinutesStr || '0m';\r\n\r\n}","import { addMinutesToMs } from \"./time-utils\";\r\n\r\nconst MODE_KEY = 'mode';\r\nconst CURRENT_KEY = 'current';\r\nconst TOTAL_KEY = 'total';\r\nconst START_TIME_KEY = 'start-time';\r\nconst LAST_SUBTRACTION_KEY = 'last-subtraction';\r\n\r\nexport const getMode = () => +localStorage.getItem(MODE_KEY) || 0;\r\nexport const setMode = value => localStorage.setItem(MODE_KEY, value);\r\n\r\nexport const getCurrent = () => +localStorage.getItem(CURRENT_KEY) || 0;\r\nexport const setCurrent = value => localStorage.setItem(CURRENT_KEY, value);\r\n\r\nexport const getTotal = () => +localStorage.getItem(TOTAL_KEY) || 0;\r\nexport const setTotal = value => localStorage.setItem(TOTAL_KEY, value);\r\nexport const increaseTotal = minutes => {\r\n    const total = getTotal();\r\n    setTotal(addMinutesToMs(total, minutes));\r\n};\r\n\r\nexport const getStartTime = () => +localStorage.getItem(START_TIME_KEY) || 0;\r\nexport const setStartTime = value => localStorage.setItem(START_TIME_KEY, value);\r\n\r\nexport const getLastSubtraction = () => +localStorage.getItem(LAST_SUBTRACTION_KEY) || 0;\r\nexport const setLastSubtraction = value => localStorage.setItem(LAST_SUBTRACTION_KEY, value);\r\n","export const MODES = {\r\n    stop: 0,\r\n    play: 1,\r\n    pause: 2\r\n};\r\n","const fallbackCopyTextToClipboard = text => {\r\n    const textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        const successful = document.execCommand('copy');\r\n        if (!successful) {\r\n            throw 'failure';\r\n        }\r\n    } catch (err) {\r\n        throw err;\r\n    } finally {\r\n        document.body.removeChild(textArea);\r\n    }\r\n};\r\n\r\nexport const copyTextToClipboard = (text, onSuccess, onError) => {\r\n    if (navigator.clipboard) {\r\n        navigator.clipboard.writeText(text).then(onSuccess, onError);\r\n    } else {\r\n        try {\r\n            fallbackCopyTextToClipboard(text);\r\n            onSuccess();\r\n        } catch (e) {\r\n            onError(e);\r\n        }\r\n    }\r\n};","import { format } from \"../../utils/time-utils\";\r\nimport React, {Fragment} from \"react\";\r\n\r\nconst Digit = ({value}) => (\r\n    <span className=\"digit\">{value}</span>\r\n);\r\n\r\nconst TwoDigits = ({value}) => {\r\n    const str = format(value);\r\n    return (\r\n        <Fragment>\r\n            <Digit value={str[0]}/>\r\n            <Digit value={str[1]}/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default TwoDigits;","import React from \"react\";\r\n\r\nexport const Symbol = ({show, children}) => (<span className={show ? '' : 'inactive'}>{children}</span>);\r\n\r\nexport const Delimiter = ({show}) => <Symbol show={show}>:</Symbol>;\r\n\r\nexport const Minus = ({show}) => <Symbol show={show}>-</Symbol>;","import React, { Component, Fragment } from 'react';\r\nimport {format, fromMs, MINUTE, timeToString} from '../../utils/time-utils';\r\nimport { copyTextToClipboard } from \"../../utils/clipboard-utils\";\r\nimport \"./display.css\";\r\nimport TwoDigits from \"./two-digits\";\r\nimport {Delimiter, Minus} from \"./symbol\";\r\n\r\nconst cursorPointer = {cursor: 'pointer'};\r\n\r\nclass Time extends Component {\r\n\r\n    onClick = () => {\r\n        const negative = this.isNegative();\r\n        const module = this.getModule();\r\n        const { hours, minutes } = fromMs(module);\r\n        const text = timeToString(negative, hours, minutes);\r\n        copyTextToClipboard(text);\r\n    }\r\n\r\n    isNegative = () => this.props.value < 0;\r\n\r\n    getModule = () => {\r\n        const { value } = this.props;\r\n        return this.isNegative() ? MINUTE - value : value;\r\n    }\r\n\r\n    render() {\r\n        const { className, delimiter, showSeconds, onlyPositive } = this.props;\r\n\r\n        const negative = this.isNegative();\r\n        const module = this.getModule();\r\n\r\n        const { hours, minutes, seconds } = fromMs(module);\r\n\r\n        return (\r\n            <span style={cursorPointer} className={`time ${className || ''}`} onClick={this.onClick}>\r\n                { !onlyPositive && <Minus show={negative}/>}\r\n                <TwoDigits value={hours} />\r\n                <Delimiter show={delimiter}/>\r\n                <TwoDigits value={minutes} />\r\n                {showSeconds && (\r\n                    <Fragment>\r\n                        <Delimiter show={delimiter}/>\r\n                        <TwoDigits value={seconds} />\r\n                    </Fragment>\r\n                )}\r\n            </span>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Time;","import React from 'react';\r\nimport Icon from '../icon/icon';\r\nimport { MODES } from '../../containers/device/device-modes';\r\nimport Time from './time';\r\nimport './display.css';\r\nimport {Symbol} from \"./symbol\";\r\n\r\nconst Display = ({ current, total, showDelimiter, mode }) => {\r\n\r\n    return (\r\n        <div className=\"display-wrapper\">\r\n            <span className=\"indicators-total-wrapper\">\r\n                <span className=\"indicators-wrapper\">\r\n                    <Symbol show={mode === MODES.play}>\r\n                        <Icon type=\"play\"/>\r\n                    </Symbol>\r\n                    <Symbol show={mode === MODES.pause}>\r\n                        <Icon type=\"pause\"/>\r\n                    </Symbol>\r\n                    <Symbol show={mode === MODES.stop}>\r\n                        <Icon type=\"stop\"/>\r\n                    </Symbol>\r\n                </span>\r\n                <Time delimiter className=\"display-total\" value={total} />\r\n            </span>\r\n            <Time delimiter={showDelimiter} onlyPositive showSeconds className=\"display-current\" value={current} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Display;","import React, { Component } from 'react';\r\nimport Icon from '../../components/icon/icon';\r\nimport Pad from '../../components/pad/pad';\r\nimport * as storage from '../../utils/storage-utils';\r\nimport { MODES } from './device-modes';\r\nimport Display from '../../components/display/display';\r\nimport { getFullWeeksSince, getLastMonday, HOUR, SECOND } from '../../utils/time-utils';\r\nimport './device.css';\r\n\r\nconst SPACE_CODE = 32;\r\nconst HOURS_PER_WEEK = 30;\r\n\r\nclass Device extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDelimiter: true,\r\n            intervalId: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const mode = storage.getMode();\r\n        let diffTime = 0;\r\n        let intervalId = null;\r\n        if (mode === MODES.play) {\r\n            const startTime = storage.getStartTime();\r\n            const nowTime = Date.now();\r\n            diffTime = nowTime - startTime;\r\n            intervalId = setInterval(this.tick, SECOND / 2);\r\n        }\r\n\r\n\r\n        const lastSubtraction = storage.getLastSubtraction();\r\n        const lastMonday = getLastMonday();\r\n\r\n        if (lastSubtraction) {\r\n            const weeks = getFullWeeksSince(lastSubtraction);\r\n            if (weeks) {\r\n                storage.setTotal(storage.getTotal() - weeks * HOURS_PER_WEEK * HOUR);\r\n            }\r\n        }\r\n        storage.setLastSubtraction(lastMonday);\r\n\r\n\r\n        this.setState({\r\n            mode: storage.getMode(),\r\n            current: storage.getCurrent() + diffTime,\r\n            total: storage.getTotal() + diffTime,\r\n            intervalId\r\n        });\r\n    }\r\n\r\n    tick = () => {\r\n        let diffTime = 0;\r\n        const startTime = storage.getStartTime();\r\n        const nowTime = Date.now();\r\n        diffTime = nowTime - startTime;\r\n\r\n        this.setState(prevState => {\r\n            const { showDelimiter } = prevState;\r\n            return {\r\n                showDelimiter: !showDelimiter,\r\n                current: storage.getCurrent() + diffTime,\r\n                total: storage.getTotal() + diffTime\r\n            };\r\n        });\r\n    };\r\n\r\n    onStartPause = () => {\r\n        this.setState(prevState => {\r\n            const { mode, intervalId, current, total } = prevState;\r\n            const isRun = mode === MODES.play;\r\n            if (isRun) {\r\n                clearInterval(intervalId);\r\n                storage.setMode(MODES.pause);\r\n                storage.setCurrent(current);\r\n                storage.setTotal(total);\r\n                return {\r\n                    mode: MODES.pause,\r\n                    intervalId: null,\r\n                    showDelimiter: true\r\n                };\r\n            } else {\r\n                const intervalId = setInterval(this.tick, 500);\r\n                storage.setStartTime(Date.now());\r\n                storage.setMode(MODES.play);\r\n                return {\r\n                    mode: MODES.play,\r\n                    intervalId\r\n                };\r\n            }\r\n        });\r\n    };\r\n\r\n    onReset = () => {\r\n        const { intervalId, total } = this.state;\r\n        clearInterval(intervalId);\r\n        storage.setTotal(total);\r\n        storage.setCurrent(0);\r\n        storage.setMode(MODES.stop);\r\n        this.setState({\r\n            current: 0,\r\n            mode: MODES.stop,\r\n            intervalId: null\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { showDelimiter, current, total, mode } = this.state;\r\n        return (\r\n            <div className=\"device\">\r\n                <Display mode={mode} showDelimiter={showDelimiter} current={current} total={total} />\r\n                <Pad className=\"pad-start-pause\" onClick={this.onStartPause} keyCode={SPACE_CODE}>\r\n                    <span className='label'>\r\n                        <Icon type=\"play\" />\r\n                        START\r\n                    </span>\r\n                    <span className='label'>\r\n                        <Icon type=\"pause\" />\r\n                        PAUSE\r\n                    </span>\r\n                </Pad>\r\n                <Pad className=\"pad-reset\" onClick={this.onReset}>\r\n                    <span className='label'>\r\n                        <Icon type=\"stop\" />\r\n                        RESET\r\n                    </span>\r\n                </Pad>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Device;\r\n","import React from 'react';\r\nimport './sign.css';\r\n\r\nconst Sign = () => (\r\n    <div className=\"sign-wrapper\">\r\n        <span className=\"sign-title\">Designed & coded by</span>\r\n        <a href=\"https://codepen.io/Dimancmc/full/vaVJBj\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"sign-link\">\r\n            Lytov Dmitry\r\n        </a>\r\n    </div>\r\n);\r\n\r\nexport default Sign;\r\n","import React, { Component } from 'react';\r\nimport './app.css';\r\nimport Device from '../device/device';\r\nimport Sign from '../../components/sign/sign';\r\nimport { increaseTotal } from \"../../utils/storage-utils\";\r\n\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        Object.defineProperty(window, 'drop', {\r\n            value: value => { increaseTotal(value); },\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <Device/>\r\n                <Sign/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/app/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faPlay, faPause, faStop } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faPlay, faPause, faStop);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}